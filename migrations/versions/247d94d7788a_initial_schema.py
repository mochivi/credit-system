"""initial schema

Revision ID: 247d94d7788a
Revises: 
Create Date: 2025-08-13 16:06:43.483333

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '247d94d7788a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Enable UUID extension
    op.execute('CREATE EXTENSION IF NOT EXISTS "uuid-ossp"')
    
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('credit_accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('active_limit', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('apr', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('credit_type', sa.String(length=50), nullable=False),
    sa.Column('current_balance', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('available_credit', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index('ix_credit_accounts_updated_at', 'credit_accounts', ['updated_at'], unique=False)
    op.create_index('ix_credit_accounts_user_id', 'credit_accounts', ['user_id'], unique=False)
    op.create_table('emotional_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('emotion_primary', sa.String(length=50), nullable=False),
    sa.Column('emotion_confidence', sa.Float(), nullable=False),
    sa.Column('arousal', sa.Float(), nullable=False),
    sa.Column('valence', sa.Float(), nullable=False),
    sa.Column('captured_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('received_at', sa.DateTime(timezone=True), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id')
    )
    op.create_index('ix_emotional_events_captured_at', 'emotional_events', ['captured_at'], unique=False)
    op.create_index('ix_emotional_events_emotion_primary', 'emotional_events', ['emotion_primary'], unique=False)
    op.create_index('ix_emotional_events_user_received', 'emotional_events', ['user_id', 'received_at'], unique=False)
    op.create_table('risk_assessments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('risk_score', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('decision', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_risk_assessments_decision', 'risk_assessments', ['decision'], unique=False)
    op.create_index('ix_risk_assessments_risk_score', 'risk_assessments', ['risk_score'], unique=False)
    op.create_index('ix_risk_assessments_user_created', 'risk_assessments', ['user_id', 'created_at'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('occurred_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_transactions_occurred_at', 'transactions', ['occurred_at'], unique=False)
    op.create_index('ix_transactions_user_occurred', 'transactions', ['user_id', 'occurred_at'], unique=False)
    op.create_table('credit_offers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('risk_assessment_id', sa.UUID(), nullable=False),
    sa.Column('credit_type', sa.String(length=50), nullable=False),
    sa.Column('credit_limit', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('apr', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['risk_assessment_id'], ['risk_assessments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_credit_offers_created_at', 'credit_offers', ['created_at'], unique=False)
    op.create_index('ix_credit_offers_expires_at', 'credit_offers', ['expires_at'], unique=False)
    op.create_index('ix_credit_offers_user_status', 'credit_offers', ['user_id', 'status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_credit_offers_user_status', table_name='credit_offers')
    op.drop_index('ix_credit_offers_expires_at', table_name='credit_offers')
    op.drop_index('ix_credit_offers_created_at', table_name='credit_offers')
    op.drop_table('credit_offers')
    op.drop_index('ix_transactions_user_occurred', table_name='transactions')
    op.drop_index('ix_transactions_occurred_at', table_name='transactions')
    op.drop_table('transactions')
    op.drop_index('ix_risk_assessments_user_created', table_name='risk_assessments')
    op.drop_index('ix_risk_assessments_risk_score', table_name='risk_assessments')
    op.drop_index('ix_risk_assessments_decision', table_name='risk_assessments')
    op.drop_table('risk_assessments')
    op.drop_index('ix_emotional_events_user_received', table_name='emotional_events')
    op.drop_index('ix_emotional_events_emotion_primary', table_name='emotional_events')
    op.drop_index('ix_emotional_events_captured_at', table_name='emotional_events')
    op.drop_table('emotional_events')
    op.drop_index('ix_credit_accounts_user_id', table_name='credit_accounts')
    op.drop_index('ix_credit_accounts_updated_at', table_name='credit_accounts')
    op.drop_table('credit_accounts')
    op.drop_table('users')
    
    op.execute('DROP EXTENSION IF EXISTS "uuid-ossp"')
    # ### end Alembic commands ###
